-- 외래키 제약 조건때문에 한번에 드랍테이블 잘 안되기도 하니까
-- 드랍 몇번 반복하고 다 드랍됐는지 확인하고 하기 !!!!!!!!!!!!!


DROP TABLE MEMBER;
DROP TABLE BOARD;
DROP TABLE REPLY;
DROP TABLE FAQ;
DROP TABLE REPORT;
DROP TABLE DONATION;
DROP TABLE ATTACHMENT;
DROP TABLE POSTALL;
DROP TABLE PET;
DROP TABLE GETTHEPET;
DROP TABLE DELIVERY;
DROP TABLE FILECATEGORY;
DROP TABLE MEMBERGRADE;
DROP TABLE FAVORITE;
COMMIT;

DROP SEQUENCE SEQ_USER_NO; -- MEMBER
DROP SEQUENCE SEQ_BOARD_NO; -- BOARD
DROP SEQUENCE SEQ_REPLY_NO; -- REPLY
DROP SEQUENCE SEQ_FAQ_NO; -- FAQ
DROP SEQUENCE SEQ_REPORT_NO; --REPORT
DROP SEQUENCE SEQ_DONATION_NO; -- DONATION
DROP SEQUENCE SEQ_FILE_NO; -- ATTACHMENT
DROP SEQUENCE SEQ_POST_NO; -- POSTALL
DROP SEQUENCE SEQ_PET_NO; -- PET
DROP SEQUENCE SEQ_GET_NO; -- GETTHEPET
DROP SEQUENCE SEQ_DEL_NO; -- DELIVERY 
DROP SEQUENCE SEQ_CATEGORY_NO; -- FILECATEGORY
DROP SEQUENCE SEQ_GRADE_NO; -- MEMBERGRADE




CREATE SEQUENCE SEQ_USER_NO NOCACHE; -- MEMBER
CREATE SEQUENCE SEQ_BOARD_NO NOCACHE; -- BOARD
CREATE SEQUENCE SEQ_REPLY_NO NOCACHE; -- REPLY
CREATE SEQUENCE SEQ_FAQ_NO NOCACHE; -- FAQ
CREATE SEQUENCE SEQ_REPORT_NO NOCACHE; --REPORT
CREATE SEQUENCE SEQ_DONATION_NO NOCACHE; -- DONATION
CREATE SEQUENCE SEQ_FILE_NO NOCACHE; -- ATTACHMENT
CREATE SEQUENCE SEQ_POST_NO NOCACHE; -- POSTALL
CREATE SEQUENCE SEQ_PET_NO NOCACHE; -- PET
CREATE SEQUENCE SEQ_GET_NO NOCACHE; -- GETTHEPET
CREATE SEQUENCE SEQ_DEL_NO NOCACHE; -- DELIVERY 
CREATE SEQUENCE SEQ_CATEGORY_NO NOCACHE; -- FILECATEGORY
CREATE SEQUENCE SEQ_GRADE_NO NOCACHE; -- MEMBERGRADE


-- 시퀀스 나중에 INSERT할떄 연결연산자로 '테이블'명 두글자까지 넣고 시퀀스사용
-- 예) ME BO REPLY FA REPORT DO AT PO PE GE DE FI MG  
-- REPLY는 REPORT랑 겹쳐서 풀네임으로

-- 사용 예시) ME || SEQ_USER_NO.NEXTVAL


CREATE TABLE FAVORITE (
	USER_NO VARCHAR2(10),
    GET_NO VARCHAR2(10)
);


CREATE TABLE MEMBERGRADE (
	GRADE_NO VARCHAR2(10),
	GRADE_NAME VARCHAR2(100) NOT NULL,
	MIN_DONA NUMBER	NOT NULL,
	MAX_DONA NUMBER	NOT NULL
);


CREATE TABLE MEMBER (
	USER_NO	VARCHAR2(10),
	USER_NAME VARCHAR2(30) NOT NULL,
	USER_ID	VARCHAR2(30) NOT NULL,
	USER_PWD VARCHAR2(200) NOT NULL,
	PHONE VARCHAR2(15)	NOT NULL,
	EMAIL VARCHAR2(100),
	ADDRESS	VARCHAR2(200),
    ENROLL_DATE	DATE DEFAULT SYSDATE,
	GRADE_NO VARCHAR2(30) DEFAULT 'MG1',
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE PET (
	PET_NO VARCHAR2(10),
	PET_NAME VARCHAR2(50) NOT NULL,
	PET_KIND VARCHAR2(100) NOT NULL,
	PET_AGE	NUMBER NOT NULL,
	PET_GENDER VARCHAR2(4) NOT NULL,
	PET_PRICE NUMBER NOT NULL,
	PET_RESCUE DATE	DEFAULT SYSDATE,
	STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);


CREATE TABLE FILECATEGORY (
	CATEGORY_NO VARCHAR2(10),
	CATEGORY_NAME VARCHAR2(100) NOT NULL
);


CREATE TABLE BOARD (
	BOARD_NO VARCHAR2(10),
    BOARD_TITLE VARCHAR2(100) NOT NULL,
    BOARD_CATEGORY VARCHAR2(20) NOT NULL,
	BOARD_CONTENT VARCHAR2(4000),
    CREATE_DATE DATE DEFAULT SYSDATE,
	COUNT NUMBER NOT NULL,
	WRITER_NO VARCHAR2(10) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE REPLY (
	REPLY_NO VARCHAR2(10),
	REPLY_CONTENT VARCHAR2(2000) NOT NULL,
	CREATE_DATE	DATE DEFAULT SYSDATE,
	BOARD_NO VARCHAR2(10) NOT NULL,
    REPLY_WRITER VARCHAR(10) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE FAQ (
	FAQ_NO VARCHAR2(10),
	FAQ_TITLE VARCHAR2(100) NOT NULL,
	FAQ_CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE,
	USER_NO VARCHAR2(10) NOT NULL,
    FAQ_CATEGORY VARCHAR2(100),
    COUNT NUMBER DEFAULT 0,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE REPORT (
	REPORT_NO VARCHAR2(10),
	REPORT_CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE	DATE DEFAULT SYSDATE,
	BOARD_NO VARCHAR2(10) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE DONATION (
	DONATION_NO VARCHAR2(10),
	DONA_PRICE NUMBER NOT NULL,
    DONA_KIND VARCHAR2(20) NOT NULL,
	DONA_DATE DATE DEFAULT SYSDATE,
	USER_NO	VARCHAR2(10) NOT NULL
);

CREATE TABLE ATTACHMENT (
	FILE_NO VARCHAR2(10),
    ORIGIN_NAME VARCHAR2(255) NOT NULL,
    CHANGE_NAME VARCHAR2(255) NOT NULL,
	FILE_PATH VARCHAR2(1000) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE,
    CATEGORY_NO VARCHAR2(100) ,
	BOARD_NO VARCHAR2(10) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);
-- 기존에 게시글, 분양글, 문의 번호칼럼이 각각 있던걸 BOARD_NO 하나로 통일
-- 게시글, 분양글, 문의 번호번호를 각각 B1~999, G1~999 이런식으로 써서 구분

CREATE TABLE POSTALL (
	POST_NO	VARCHAR2(10),
	POST_TITLE VARCHAR2(100) NOT NULL,
	POST_CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DATE DATE DEFAULT SYSDATE,
	RECEIVER_NO	VARCHAR2(10)NOT NULL,
	CALLER_NO VARCHAR2(10) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);



CREATE TABLE GETTHEPET (
	GET_NO VARCHAR2(10),
	GET_CONTENT VARCHAR2(4000) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE,
	PET_NO VARCHAR2(10) NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL
);

CREATE TABLE DELIVERY (
	DEL_NO VARCHAR2(10),
	DEL_STATUS VARCHAR2(100) DEFAULT '배송준비' NOT NULL,
	CUR_SPOT VARCHAR2(100) NULL,
	PET_NO VARCHAR2(10) NOT NULL,
	USER_NO	VARCHAR2(10) NOT NULL,
    DELIVERY_DATE DATE DEFAULT SYSDATE
);


ALTER TABLE FAVORITE ADD CONSTRAINT PK_FAVORITE PRIMARY KEY (
    USER_NO, GET_NO
);


ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	USER_NO
);

ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (
	BOARD_NO
);

ALTER TABLE REPLY ADD CONSTRAINT PK_REPLY PRIMARY KEY (
	REPLY_NO
);

ALTER TABLE FAQ ADD CONSTRAINT PK_FAQ PRIMARY KEY (
	FAQ_NO
);

ALTER TABLE REPORT ADD CONSTRAINT PK_REPORT PRIMARY KEY (
	REPORT_NO
);

ALTER TABLE DONATION ADD CONSTRAINT PK_DONATION PRIMARY KEY (
	DONATION_NO
);

ALTER TABLE ATTACHMENT ADD CONSTRAINT PK_ATTACHMENT PRIMARY KEY (
	FILE_NO
);

ALTER TABLE POSTALL ADD CONSTRAINT PK_POSTALL PRIMARY KEY (
	POST_NO
);

ALTER TABLE PET ADD CONSTRAINT PK_PET PRIMARY KEY (
	PET_NO
);

ALTER TABLE GETTHEPET ADD CONSTRAINT PK_GETTHEPET PRIMARY KEY (
	GET_NO
);

ALTER TABLE DELIVERY ADD CONSTRAINT PK_DELIVERY PRIMARY KEY (
	DEL_NO
);

ALTER TABLE FILECATEGORY ADD CONSTRAINT PK_FILECATEGORY PRIMARY KEY (
	CATEGORY_NO
);

ALTER TABLE MEMBERGRADE ADD CONSTRAINT PK_MEMBERSHIPTIER PRIMARY KEY (
	GRADE_NO
);


COMMENT ON COLUMN ATTACHMENT.FILE_NO IS '파일고유번호';
COMMENT ON COLUMN ATTACHMENT.ORIGIN_NAME IS '원래이름';
COMMENT ON COLUMN ATTACHMENT.CHANGE_NAME IS '바뀐이름';
COMMENT ON COLUMN ATTACHMENT.FILE_PATH IS '저장폴더경로';
COMMENT ON COLUMN ATTACHMENT.CREATE_DATE IS '업로드일';
COMMENT ON COLUMN ATTACHMENT.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN ATTACHMENT.BOARD_NO IS '글고유번호';
COMMENT ON COLUMN ATTACHMENT.STATUS IS '상태정보';


COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글고유번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글제목';
COMMENT ON COLUMN BOARD.BOARD_CATEGORY IS '카테고리';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글내용';
COMMENT ON COLUMN BOARD.CREATE_DATE IS '작성일';
COMMENT ON COLUMN BOARD.COUNT IS '조회수';
COMMENT ON COLUMN BOARD.WRITER_NO IS '회원고유번호';
COMMENT ON COLUMN BOARD.STATUS IS '상태정보';


COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글고유번호';
COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN REPLY.CREATE_DATE IS '작성일';
COMMENT ON COLUMN REPLY.BOARD_NO IS '게시글고유번호';
COMMENT ON COLUMN REPLY.STATUS IS '상태정보';


COMMENT ON COLUMN DELIVERY.DEL_NO IS '배송고유번호';
COMMENT ON COLUMN DELIVERY.DEL_STATUS IS '배송현황';
COMMENT ON COLUMN DELIVERY.CUR_SPOT IS '현재위치';
COMMENT ON COLUMN DELIVERY.PET_NO IS '동물번호';
COMMENT ON COLUMN DELIVERY.USER_NO IS '회원고유번호';


COMMENT ON COLUMN DONATION.DONATION_NO IS '후원번호';
COMMENT ON COLUMN DONATION.DONA_PRICE IS '후원금액';
COMMENT ON COLUMN DONATION.DONA_KIND IS '후원종류';
COMMENT ON COLUMN DONATION.DONA_DATE IS '후원날짜';
COMMENT ON COLUMN DONATION.USER_NO IS '회원고유번호';


COMMENT ON COLUMN FAQ.FAQ_NO IS '문의고유번호';
COMMENT ON COLUMN FAQ.FAQ_TITLE IS '문의제목';
COMMENT ON COLUMN FAQ.FAQ_CONTENT IS '문의내용';
COMMENT ON COLUMN FAQ.CREATE_DATE IS '작성일';
COMMENT ON COLUMN FAQ.USER_NO IS '회원고유번호';
COMMENT ON COLUMN FAQ.STATUS IS '상태정보';


COMMENT ON COLUMN FILECATEGORY.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN FILECATEGORY.CATEGORY_NAME IS '카테고리이름';


COMMENT ON COLUMN GETTHEPET.GET_NO IS '분양글고유번호';
COMMENT ON COLUMN GETTHEPET.GET_CONTENT IS '분양글내용';
COMMENT ON COLUMN GETTHEPET.CREATE_DATE IS '작성일';
COMMENT ON COLUMN GETTHEPET.PET_NO IS '동물번호';
COMMENT ON COLUMN GETTHEPET.STATUS IS '상태정보';


COMMENT ON COLUMN MEMBER.USER_NO IS '회원고유번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원명';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN MEMBER.ENROLL_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.GRADE_NO IS '후원등급번호';
COMMENT ON COLUMN MEMBER.STATUS IS '상태정보';


COMMENT ON COLUMN MEMBERGRADE.GRADE_NO IS '후원등급번호';
COMMENT ON COLUMN MEMBERGRADE.GRADE_NAME IS '후원등급이름';
COMMENT ON COLUMN MEMBERGRADE.MIN_DONA IS '최소누적금액';
COMMENT ON COLUMN MEMBERGRADE.MAX_DONA IS '최대누적금액';


COMMENT ON COLUMN PET.PET_NO IS '동물번호';
COMMENT ON COLUMN PET.PET_NAME IS '동물이름';
COMMENT ON COLUMN PET.PET_KIND IS '동물종류';
COMMENT ON COLUMN PET.PET_AGE IS '동물나이';
COMMENT ON COLUMN PET.PET_GENDER IS '동물성별';
COMMENT ON COLUMN PET.PET_PRICE IS '분양가';
COMMENT ON COLUMN PET.PET_RESCUE IS '구조일';
COMMENT ON COLUMN PET.STATUS IS '상태정보';


COMMENT ON COLUMN POSTALL.POST_NO IS '쪽지고유번호';
COMMENT ON COLUMN POSTALL.POST_NAME IS '쪽지제목';
COMMENT ON COLUMN POSTALL.POST_CONTENT IS '쪽지내용';
COMMENT ON COLUMN POSTALL.CREATE_DATE IS '작성일';
COMMENT ON COLUMN POSTALL.RECEIVER_NO IS '수신자회원번호';
COMMENT ON COLUMN POSTALL.CALLER_NO IS '발신자회원번호';
COMMENT ON COLUMN POSTALL.STATUS IS '상태정보';


COMMENT ON COLUMN REPORT.REPORT_NO IS '신고글고유번호';
COMMENT ON COLUMN REPORT.REPORT_CONTENT IS '신고내용';
COMMENT ON COLUMN REPORT.CREATE_DATE IS '작성일';
COMMENT ON COLUMN REPORT.BOARD_NO IS '게시글고유번호';
COMMENT ON COLUMN REPORT.STATUS IS '상태정보';



--ALTER TABLE MEMBER ADD CONSTRAINT MEM_FOR FOREIGN KEY(GRADE_NO)
--REFERENCES MEMBERGRADE(GRADE_NO) ON DELETE CASCADE;
-- 
--ALTER TABLE BOARD ADD CONSTRAINT BOA_FOR FOREIGN KEY(WRITER_NO)
--REFERENCES MEMBER(USER_NO) ON DELETE CASCADE;
--
--ALTER TABLE REPLY ADD CONSTRAINT REPLY_FOR FOREIGN KEY(BOARD_NO)
--REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE ;
--
--ALTER TABLE FAQ ADD CONSTRAINT FAQ_FOR FOREIGN KEY(USER_NO)
--REFERENCES MEMBER(USER_NO) ON DELETE CASCADE;
--
--ALTER TABLE REPORT ADD CONSTRAINT REPORT_FOR FOREIGN KEY(BOARD_NO)
--REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE;
--
--ALTER TABLE DONATION ADD CONSTRAINT DON_FOR FOREIGN KEY(USER_NO)
--REFERENCES MEMBER(USER_NO) ON DELETE CASCADE;
--
--ALTER TABLE ATTACHMENT ADD CONSTRAINT ATT_FOR FOREIGN KEY(CATEGORY_NO)
--REFERENCES FILECATEGORY(CATEGORY_NO) ON DELETE CASCADE;
--
--ALTER TABLE DELIVERY ADD CONSTRAINT DEL_FOR_PET FOREIGN KEY(PET_NO)
--REFERENCES PET(PET_NO) ON DELETE CASCADE;
--
--ALTER TABLE DELIVERY ADD CONSTRAINT DEL_FOR_MEM FOREIGN KEY(USER_NO)
--REFERENCES MEMBER(USER_NO) ON DELETE CASCADE;
--
--ALTER TABLE GETTHEPET ADD CONSTRAINT GET_FOR FOREIGN KEY(PET_NO)
--REFERENCES PET(PET_NO) ON DELETE CASCADE;
--
--ALTER TABLE POSTALL ADD CONSTRAINT POS_FOR_REC FOREIGN KEY(RECEIVER_NO)
--REFERENCES MEMBER(USER_NO) ON DELETE CASCADE;
--
--ALTER TABLE POSTALL ADD CONSTRAINT POS_FOR_CAL FOREIGN KEY(CALLER_NO)
--REFERENCES MEMBER(USER_NO) ON DELETE CASCADE;

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '미니하우스' , 0, 0 );

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '하우스' , 1, 100000 );

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '빌리지' , 100000, 500000 );

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '타운' , 500000, 1000000 );

INSERT INTO PET P
VALUES('PE'||SEQ_PET_NO.NEXTVAL, '호빵' , '말티푸' , 1, '남', 1000000, SYSDATE, 'Y' );

INSERT INTO FILECATEGORY
VALUES('FI'||SEQ_CATEGORY_NO.NEXTVAL, 'getThumb');

INSERT INTO FILECATEGORY
VALUES('FI'||SEQ_CATEGORY_NO.NEXTVAL, 'getContent');

COMMIT;